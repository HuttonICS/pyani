{"name":"Pyani","tagline":"Python module for average nucleotide identity analyses","body":"## Overview\r\n`pyani` is a Python module that provides support for calculating average nucleotide identity (ANI) and related measures for whole genome comparisons, and rendering relevant graphical summary output. Where available, it takes advantage of multicore systems, and can integrate with [SGE/OGE](http://gridscheduler.sourceforge.net/)-type job schedulers for the sequence comparisons.\r\n\r\n`pyani` also installs a script: `average_nucleotide_identity.py` that enables command-line ANI analysis.\r\n\r\n## Script: <a name=\"average_nucleotide_identity.py\">`average_nucleotide_identity.py`</a>\r\n\r\nThe `average_nucleotide_identity.py` script - part of this module - enables ANI analysis at the command-line, and uses the `pyani` module behind the scenes.\r\n\r\n### Script Usage\r\n\r\n```\r\naverage_nucleotide_identity.py [-h] [-o OUTDIRNAME] [-i INDIRNAME] [-v]\r\n                                      [-f] [-s] [-l LOGFILE] [--skip_nucmer]\r\n                                      [--skip_blastn] [--noclobber] [-g]\r\n                                      [--gformat GFORMAT] [--gmethod GMETHOD]\r\n                                      [--labels LABELS] [--classes CLASSES]\r\n                                      [-m METHOD] [--scheduler SCHEDULER]\r\n                                      [--maxmatch] [--nucmer_exe NUCMER_EXE]\r\n                                      [--blastn_exe BLASTN_EXE]\r\n                                      [--makeblastdb_exe MAKEBLASTDB_EXE]\r\n                                      [--blastall_exe BLASTALL_EXE]\r\n                                      [--formatdb_exe FORMATDB_EXE]\r\n\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n  -o OUTDIRNAME, --outdir OUTDIRNAME\r\n                        Output directory\r\n  -i INDIRNAME, --indir INDIRNAME\r\n                        Input directory name\r\n  -v, --verbose         Give verbose output\r\n  -f, --force           Force file overwriting\r\n  -s, --fragsize        Sequence fragment size for ANIb\r\n  -l LOGFILE, --logfile LOGFILE\r\n                        Logfile location\r\n  --skip_nucmer         Skip NUCmer runs, for testing (e.g. if output already\r\n                        present)\r\n  --skip_blastn         Skip BLASTN runs, for testing (e.g. if output already\r\n                        present)\r\n  --noclobber           Don't nuke existing files\r\n  -g, --graphics        Generate heatmap of ANI\r\n  --gformat GFORMAT     Graphics output format [pdf|png|jpg|svg]\r\n  --gmethod GMETHOD     Graphics output method [mpl|R]\r\n  --labels LABELS       Path to file containing sequence labels\r\n  --classes CLASSES     Path to file containing sequence classes\r\n  -m METHOD, --method METHOD\r\n                        ANI method [ANIm|ANIb|ANIblastall|TETRA]\r\n  --scheduler SCHEDULER\r\n                        Job scheduler [multiprocessing|SGE]\r\n  --maxmatch            Override MUMmer to allow all NUCmer matches\r\n  --nucmer_exe NUCMER_EXE\r\n                        Path to NUCmer executable\r\n  --blastn_exe BLASTN_EXE\r\n                        Path to BLASTN+ executable\r\n  --makeblastdb_exe MAKEBLASTDB_EXE\r\n                        Path to BLAST+ makeblastdb executable\r\n  --blastall_exe BLASTALL_EXE\r\n                        Path to BLASTALL executable\r\n  --formatdb_exe FORMATDB_EXE\r\n                        Path to BLAST formatdb executable\r\n```\r\n\r\nExample data and output can be found in the directory `test_ani_data`. The data are chromosomes of four isolates of *Caulobacter*. Basic analyses can be performed with the command lines:\r\n\r\n```\r\n$ ./average_nucleotide_identity.py -i tests/test_ani_data/ -o tests/test_ANIm_output -m ANIm -g\r\n$ ./average_nucleotide_identity.py -i tests/test_ani_data/ -o tests/test_ANIb_output -m ANIb -g\r\n$ ./average_nucleotide_identity.py -i tests/test_ani_data/ -o tests/test_ANIblastall_output -m ANIblastall -g\r\n$ ./average_nucleotide_identity.py -i tests/test_ani_data/ -o tests/test_TETRA_output -m TETRA -g\r\n```\r\n\r\nThe graphical output below, supporting assignment of `NC_002696` and `NC_011916` to the same species (*C.crescentus*), and the other two isolates to distinct species (`NC_014100`:*C.segnis*; `NC_010338`:*C.* sp K31), was generated with the command-line:\r\n\r\n```\r\n./average_nucleotide_identity.py -v -i tests/test_ani_data/ \\\r\n    -o tests/test_ANIm_output/ -g --gformat png \\\r\n    --classes tests/test_ani_data/classes.tab \\\r\n    --labels tests/test_ani_data/labels.tab\r\n```\r\n\r\n\r\n![ANIm percentage identity for *Caulobacter* test data](https://github.com/widdowquinn/pyani/blob/master/tests/test_ani_data/ANIm_percentage_identity.png?raw=true \"ANIm percentage identity\")\r\n![ANIm alignment coverage for *Caulobacter* test data](https://github.com/widdowquinn/pyani/blob/master/tests/test_ani_data/ANIm_alignment_coverage.png?raw=true \"ANIm alignment coverage\")\r\n![ANIm alignment length for *Caulobacter* test data](https://github.com/widdowquinn/pyani/blob/master/tests/test_ani_data/ANIm_alignment_lengths.png?raw=true \"ANIm alignment length\")\r\n![ANIm alignment similarity errors for *Caulobacter* test data](https://github.com/widdowquinn/pyani/blob/master/tests/test_ani_data/ANIm_similarity_errors.png?raw=true \"ANIm alignment similarity\")\r\n\r\n## DEPENDENCIES\r\n\r\n### For ANI analysis\r\n\r\n* **Biopython** <http://www.biopython.org>\r\n* **NumPy** <http://www.numpy.org/>\r\n* **pandas** <http://pandas.pydata.org/>\r\n* **SciPy** <http://www.scipy.org/>\r\n\r\n* **BLAST+** executable in the `$PATH`, or available on the command line (required for **ANIb** analysis) <ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/>\r\n* **legacy BLAST** executable in the `$PATH` or available on the command line (required for **ANIblastall** analysis) <ftp://ftp.ncbi.nlm.nih.gov/blast/executables/release/LATEST/>\r\n* **MUMmer** executables in the $PATH, or available on the command line (required for **ANIm** analysis) <http://mummer.sourceforge.net/>\r\n\r\n### For graphical output\r\n\r\n* **matplotlib** <http://matplotlib.org/>\r\n\r\nand/or\r\n\r\n* **R** with shared libraries installed on the system <http://cran.r-project.org/>\r\n* **Rpy2** <http://rpy.sourceforge.net/rpy2.html>\r\n\r\n\r\n# INSTALLATION\r\n\r\nIf you have downloaded v0.1.0 or greater, and the dependencies above are satisfied, then installation should be as simple as downloading the latest release and uncompressing it, or cloning the repository as below:\r\n\r\n```\r\n$ git clone https://github.com/widdowquinn/pyani\r\n```\r\n\r\nthen changing to the appropriate directory:\r\n\r\n```\r\n$ cd pyani\r\n```\r\n\r\nthen issuing:\r\n\r\n```\r\n$ python setup.py install\r\n```\r\n\r\n(or whatever variant you wish, e.g. for a home directory-local installation) from the top directory in the repository (with root permissions, if necessary).\r\n\r\n## Method and Output Description\r\n\r\n### Average Nucleotide Identity (ANI)\r\n\r\nThis module calculates Average Nucleotide Identity (ANI) according to one of a number of alternative methods described in, e.g.\r\n\r\n* Richter M, Rossello-Mora R (2009) Shifting the genomic gold standard for the prokaryotic species definition. Proc Natl Acad Sci USA 106: 19126-19131. doi:10.1073/pnas.0906412106. (ANI1020, ANIm, ANIb)\r\n* Goris J, Konstantinidis KT, Klappenbach JA, Coenye T, Vandamme P, et al. (2007) DNA-DNA hybridization values and their relationship to whole-genome sequence similarities. Int J Syst Evol Micr 57: 81-91. doi:10.1099/ijs.0.64483-0.\r\n\r\nANI is proposed to be the appropriate *in silico* substitute for DNA-DNA \r\nhybridisation (DDH), and so useful for delineating species boundaries. A \r\ntypical percentage threshold for species boundary in the literature is 95% \r\nANI (e.g. Richter et al. 2009).\r\n\r\nAll ANI methods follow the basic algorithm:\r\n\r\n- Align the genome of organism 1 against that of organism 2, and identify the matching regions\r\n- Calculate the percentage nucleotide identity of the matching regions, as an average for all matching regions\r\n\r\nMethods differ on: (1) what alignment algorithm is used, and the choice of parameters (this affects the aligned region boundaries); (2) what the input is for alignment (typically either fragments of fixed size, or the most complete assembly available).\r\n\r\n* **ANIm**: uses MUMmer (NUCmer) to align the input sequences.\r\n* **ANIb**: uses BLASTN+ to align 1020nt fragments of the input sequences\r\n* **ANIblastall**: uses legacy BLASTN to align 1020nt fragments of the input sequences\r\n* **TETRA**: calculates tetranucleotide frequencies of each input sequence\r\n\r\nThe algorithms takes as input correctly-formatted FASTA multiple sequence files. All sequences for a single organism should be contained in only one sequence file. Although it is possible to provide new labels for each input genome, for rendering graphical output, the names of these files are used for identification so it is best to name \r\nthem sensibly.\r\n\r\nOutput is written to a named directory. The output files differ depending on the chosen ANI method.\r\n\r\n* **ANIm**: MUMmer/NUCmer .delta files, describing each pairwise sequence alignment. Output as tab-separated plain text and Excel format tables describing: alignment coverage; total alignment lengths; similarity errors; and percentage identity (ANIm).\r\n* **ANIb** and **ANIblastall**: FASTA sequences describing 1020nt fragments of each input sequence; BLAST nucleotide databases - one for each set of fragments; and BLASTN output files (tab-separated tabular format plain text) - one for each pairwise comparison of input sequences. Output as tab-separated plain text and Excel format tables describing: alignment coverage; total alignment lengths; similarity errors; and percentage identity (ANIb or ANIblastall).\r\n* **TETRA**: Tab-separated plain text and Excel format files describing the Pearson correlations between Z-score distributions for each tetranucleotide in each input sequence (TETRA).\r\n\r\nIf graphical output is chosen, the output directory will also contain PDF files representing the similarity between sequences as a heatmap with row and column dendrograms.\r\n\r\n\r\n\r\n## Licensing\r\n\r\nUnless otherwise indicated, all code is subject to the following agreement:\r\n\r\n    (c) The James Hutton Institute 2014, 2015\r\n    Author: Leighton Pritchard\r\n\r\n    Contact: leighton.pritchard@hutton.ac.uk\r\n\r\n    Address: \r\n    Leighton Pritchard,\r\n    Information and Computational Sciences,\r\n    James Hutton Institute,\r\n    Errol Road,\r\n    Invergowrie,\r\n    Dundee,\r\n    DD6 9LH,\r\n    Scotland,\r\n    UK\r\n\r\nThe MIT License\r\n\r\nCopyright (c) 2014-2015 The James Hutton Institute\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}